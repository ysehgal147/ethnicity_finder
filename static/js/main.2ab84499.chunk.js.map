{"version":3,"sources":["country.js","App.js","reportWebVitals.js","index.js"],"names":["countryList","value","App","useState","firstname","lastname","country","details","setDetails","modal","setModal","result","setResult","toast","useToast","inputEvents","event","prev","target","name","className","w","p","h","centerContent","spacing","label","closeDelay","fontSize","bgGradient","bgClip","id","isRequired","placeholder","focusBorderColor","onChange","onClick","last","url","console","log","axios","get","headers","then","response","data","title","description","status","position","duration","isClosable","finally","mt","color","type","_hover","onClose","isOpen","isCentered","size","ethnicitiesTop","Math","round","score","ethnicity","ethnicityAlt","slice","map","e","isIndeterminate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ab84499.chunk.js","sourcesContent":["import React from \"react\";\n\nconst countryList = [\n  <option value=\"AF\">Afghanistan</option>,\n  <option value=\"AX\">Ã…land Islands</option>,\n  <option value=\"AL\">Albania</option>,\n  <option value=\"DZ\">Algeria</option>,\n  <option value=\"AS\">American Samoa</option>,\n  <option value=\"AD\">Andorra</option>,\n  <option value=\"AO\">Angola</option>,\n  <option value=\"AI\">Anguilla</option>,\n  <option value=\"AQ\">Antarctica</option>,\n  <option value=\"AG\">Antigua and Barbuda</option>,\n  <option value=\"AR\">Argentina</option>,\n  <option value=\"AM\">Armenia</option>,\n  <option value=\"AW\">Aruba</option>,\n  <option value=\"AU\">Australia</option>,\n  <option value=\"AT\">Austria</option>,\n  <option value=\"AZ\">Azerbaijan</option>,\n  <option value=\"BS\">Bahamas</option>,\n  <option value=\"BH\">Bahrain</option>,\n  <option value=\"BD\">Bangladesh</option>,\n  <option value=\"BB\">Barbados</option>,\n  <option value=\"BY\">Belarus</option>,\n  <option value=\"BE\">Belgium</option>,\n  <option value=\"BZ\">Belize</option>,\n  <option value=\"BJ\">Benin</option>,\n  <option value=\"BM\">Bermuda</option>,\n  <option value=\"BT\">Bhutan</option>,\n  <option value=\"BO\">Bolivia, Plurinational State of</option>,\n  <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>,\n  <option value=\"BA\">Bosnia and Herzegovina</option>,\n  <option value=\"BW\">Botswana</option>,\n  <option value=\"BV\">Bouvet Island</option>,\n  <option value=\"BR\">Brazil</option>,\n  <option value=\"IO\">British Indian Ocean Territory</option>,\n  <option value=\"BN\">Brunei Darussalam</option>,\n  <option value=\"BG\">Bulgaria</option>,\n  <option value=\"BF\">Burkina Faso</option>,\n  <option value=\"BI\">Burundi</option>,\n  <option value=\"KH\">Cambodia</option>,\n  <option value=\"CM\">Cameroon</option>,\n  <option value=\"CA\">Canada</option>,\n  <option value=\"CV\">Cape Verde</option>,\n  <option value=\"KY\">Cayman Islands</option>,\n  <option value=\"CF\">Central African Republic</option>,\n  <option value=\"TD\">Chad</option>,\n  <option value=\"CL\">Chile</option>,\n  <option value=\"CN\">China</option>,\n  <option value=\"CX\">Christmas Island</option>,\n  <option value=\"CC\">Cocos (Keeling) Islands</option>,\n  <option value=\"CO\">Colombia</option>,\n  <option value=\"KM\">Comoros</option>,\n  <option value=\"CG\">Congo</option>,\n  <option value=\"CD\">Congo, the Democratic Republic of the</option>,\n  <option value=\"CK\">Cook Islands</option>,\n  <option value=\"CR\">Costa Rica</option>,\n  <option value=\"CI\">CÃ´te d'Ivoire</option>,\n  <option value=\"HR\">Croatia</option>,\n  <option value=\"CU\">Cuba</option>,\n  <option value=\"CW\">CuraÃ§ao</option>,\n  <option value=\"CY\">Cyprus</option>,\n  <option value=\"CZ\">Czech Republic</option>,\n  <option value=\"DK\">Denmark</option>,\n  <option value=\"DJ\">Djibouti</option>,\n  <option value=\"DM\">Dominica</option>,\n  <option value=\"DO\">Dominican Republic</option>,\n  <option value=\"EC\">Ecuador</option>,\n  <option value=\"EG\">Egypt</option>,\n  <option value=\"SV\">El Salvador</option>,\n  <option value=\"GQ\">Equatorial Guinea</option>,\n  <option value=\"ER\">Eritrea</option>,\n  <option value=\"EE\">Estonia</option>,\n  <option value=\"ET\">Ethiopia</option>,\n  <option value=\"FK\">Falkland Islands (Malvinas)</option>,\n  <option value=\"FO\">Faroe Islands</option>,\n  <option value=\"FJ\">Fiji</option>,\n  <option value=\"FI\">Finland</option>,\n  <option value=\"FR\">France</option>,\n  <option value=\"GF\">French Guiana</option>,\n  <option value=\"PF\">French Polynesia</option>,\n  <option value=\"TF\">French Southern Territories</option>,\n  <option value=\"GA\">Gabon</option>,\n  <option value=\"GM\">Gambia</option>,\n  <option value=\"GE\">Georgia</option>,\n  <option value=\"DE\">Germany</option>,\n  <option value=\"GH\">Ghana</option>,\n  <option value=\"GI\">Gibraltar</option>,\n  <option value=\"GR\">Greece</option>,\n  <option value=\"GL\">Greenland</option>,\n  <option value=\"GD\">Grenada</option>,\n  <option value=\"GP\">Guadeloupe</option>,\n  <option value=\"GU\">Guam</option>,\n  <option value=\"GT\">Guatemala</option>,\n  <option value=\"GG\">Guernsey</option>,\n  <option value=\"GN\">Guinea</option>,\n  <option value=\"GW\">Guinea-Bissau</option>,\n  <option value=\"GY\">Guyana</option>,\n  <option value=\"HT\">Haiti</option>,\n  <option value=\"HM\">Heard Island and McDonald Islands</option>,\n  <option value=\"VA\">Holy See (Vatican City State)</option>,\n  <option value=\"HN\">Honduras</option>,\n  <option value=\"HK\">Hong Kong</option>,\n  <option value=\"HU\">Hungary</option>,\n  <option value=\"IS\">Iceland</option>,\n  <option value=\"IN\">India</option>,\n  <option value=\"ID\">Indonesia</option>,\n  <option value=\"IR\">Iran, Islamic Republic of</option>,\n  <option value=\"IQ\">Iraq</option>,\n  <option value=\"IE\">Ireland</option>,\n  <option value=\"IM\">Isle of Man</option>,\n  <option value=\"IL\">Israel</option>,\n  <option value=\"IT\">Italy</option>,\n  <option value=\"JM\">Jamaica</option>,\n  <option value=\"JP\">Japan</option>,\n  <option value=\"JE\">Jersey</option>,\n  <option value=\"JO\">Jordan</option>,\n  <option value=\"KZ\">Kazakhstan</option>,\n  <option value=\"KE\">Kenya</option>,\n  <option value=\"KI\">Kiribati</option>,\n  <option value=\"KP\">Korea, Democratic People's Republic of</option>,\n  <option value=\"KR\">Korea, Republic of</option>,\n  <option value=\"KW\">Kuwait</option>,\n  <option value=\"KG\">Kyrgyzstan</option>,\n  <option value=\"LA\">Lao People's Democratic Republic</option>,\n  <option value=\"LV\">Latvia</option>,\n  <option value=\"LB\">Lebanon</option>,\n  <option value=\"LS\">Lesotho</option>,\n  <option value=\"LR\">Liberia</option>,\n  <option value=\"LY\">Libya</option>,\n  <option value=\"LI\">Liechtenstein</option>,\n  <option value=\"LT\">Lithuania</option>,\n  <option value=\"LU\">Luxembourg</option>,\n  <option value=\"MO\">Macao</option>,\n  <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>,\n  <option value=\"MG\">Madagascar</option>,\n  <option value=\"MW\">Malawi</option>,\n  <option value=\"MY\">Malaysia</option>,\n  <option value=\"MV\">Maldives</option>,\n  <option value=\"ML\">Mali</option>,\n  <option value=\"MT\">Malta</option>,\n  <option value=\"MH\">Marshall Islands</option>,\n  <option value=\"MQ\">Martinique</option>,\n  <option value=\"MR\">Mauritania</option>,\n  <option value=\"MU\">Mauritius</option>,\n  <option value=\"YT\">Mayotte</option>,\n  <option value=\"MX\">Mexico</option>,\n  <option value=\"FM\">Micronesia, Federated States of</option>,\n  <option value=\"MD\">Moldova, Republic of</option>,\n  <option value=\"MC\">Monaco</option>,\n  <option value=\"MN\">Mongolia</option>,\n  <option value=\"ME\">Montenegro</option>,\n  <option value=\"MS\">Montserrat</option>,\n  <option value=\"MA\">Morocco</option>,\n  <option value=\"MZ\">Mozambique</option>,\n  <option value=\"MM\">Myanmar</option>,\n  <option value=\"NA\">Namibia</option>,\n  <option value=\"NR\">Nauru</option>,\n  <option value=\"NP\">Nepal</option>,\n  <option value=\"NL\">Netherlands</option>,\n  <option value=\"NC\">New Caledonia</option>,\n  <option value=\"NZ\">New Zealand</option>,\n  <option value=\"NI\">Nicaragua</option>,\n  <option value=\"NE\">Niger</option>,\n  <option value=\"NG\">Nigeria</option>,\n  <option value=\"NU\">Niue</option>,\n  <option value=\"NF\">Norfolk Island</option>,\n  <option value=\"MP\">Northern Mariana Islands</option>,\n  <option value=\"NO\">Norway</option>,\n  <option value=\"OM\">Oman</option>,\n  <option value=\"PK\">Pakistan</option>,\n  <option value=\"PW\">Palau</option>,\n  <option value=\"PS\">Palestinian Territory, Occupied</option>,\n  <option value=\"PA\">Panama</option>,\n  <option value=\"PG\">Papua New Guinea</option>,\n  <option value=\"PY\">Paraguay</option>,\n  <option value=\"PE\">Peru</option>,\n  <option value=\"PH\">Philippines</option>,\n  <option value=\"PN\">Pitcairn</option>,\n  <option value=\"PL\">Poland</option>,\n  <option value=\"PT\">Portugal</option>,\n  <option value=\"PR\">Puerto Rico</option>,\n  <option value=\"QA\">Qatar</option>,\n  <option value=\"RE\">RÃ©union</option>,\n  <option value=\"RO\">Romania</option>,\n  <option value=\"RU\">Russian Federation</option>,\n  <option value=\"RW\">Rwanda</option>,\n  <option value=\"BL\">Saint BarthÃ©lemy</option>,\n  <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>,\n  <option value=\"KN\">Saint Kitts and Nevis</option>,\n  <option value=\"LC\">Saint Lucia</option>,\n  <option value=\"MF\">Saint Martin (French part)</option>,\n  <option value=\"PM\">Saint Pierre and Miquelon</option>,\n  <option value=\"VC\">Saint Vincent and the Grenadines</option>,\n  <option value=\"WS\">Samoa</option>,\n  <option value=\"SM\">San Marino</option>,\n  <option value=\"ST\">Sao Tome and Principe</option>,\n  <option value=\"SA\">Saudi Arabia</option>,\n  <option value=\"SN\">Senegal</option>,\n  <option value=\"RS\">Serbia</option>,\n  <option value=\"SC\">Seychelles</option>,\n  <option value=\"SL\">Sierra Leone</option>,\n  <option value=\"SG\">Singapore</option>,\n  <option value=\"SX\">Sint Maarten (Dutch part)</option>,\n  <option value=\"SK\">Slovakia</option>,\n  <option value=\"SI\">Slovenia</option>,\n  <option value=\"SB\">Solomon Islands</option>,\n  <option value=\"SO\">Somalia</option>,\n  <option value=\"ZA\">South Africa</option>,\n  <option value=\"GS\">South Georgia and the South Sandwich Islands</option>,\n  <option value=\"SS\">South Sudan</option>,\n  <option value=\"ES\">Spain</option>,\n  <option value=\"LK\">Sri Lanka</option>,\n  <option value=\"SD\">Sudan</option>,\n  <option value=\"SR\">Suriname</option>,\n  <option value=\"SJ\">Svalbard and Jan Mayen</option>,\n  <option value=\"SZ\">Swaziland</option>,\n  <option value=\"SE\">Sweden</option>,\n  <option value=\"CH\">Switzerland</option>,\n  <option value=\"SY\">Syrian Arab Republic</option>,\n  <option value=\"TW\">Taiwan, Province of China</option>,\n  <option value=\"TJ\">Tajikistan</option>,\n  <option value=\"TZ\">Tanzania, United Republic of</option>,\n  <option value=\"TH\">Thailand</option>,\n  <option value=\"TL\">Timor-Leste</option>,\n  <option value=\"TG\">Togo</option>,\n  <option value=\"TK\">Tokelau</option>,\n  <option value=\"TO\">Tonga</option>,\n  <option value=\"TT\">Trinidad and Tobago</option>,\n  <option value=\"TN\">Tunisia</option>,\n  <option value=\"TR\">Turkey</option>,\n  <option value=\"TM\">Turkmenistan</option>,\n  <option value=\"TC\">Turks and Caicos Islands</option>,\n  <option value=\"TV\">Tuvalu</option>,\n  <option value=\"UG\">Uganda</option>,\n  <option value=\"UA\">Ukraine</option>,\n  <option value=\"AE\">United Arab Emirates</option>,\n  <option value=\"GB\">United Kingdom</option>,\n  <option value=\"US\">United States</option>,\n  <option value=\"UM\">United States Minor Outlying Islands</option>,\n  <option value=\"UY\">Uruguay</option>,\n  <option value=\"UZ\">Uzbekistan</option>,\n  <option value=\"VU\">Vanuatu</option>,\n  <option value=\"VE\">Venezuela, Bolivarian Republic of</option>,\n  <option value=\"VN\">Viet Nam</option>,\n  <option value=\"VG\">Virgin Islands, British</option>,\n  <option value=\"VI\">Virgin Islands, U.S.</option>,\n  <option value=\"WF\">Wallis and Futuna</option>,\n  <option value=\"EH\">Western Sahara</option>,\n  <option value=\"YE\">Yemen</option>,\n  <option value=\"ZM\">Zambia</option>,\n  <option value=\"ZW\">Zimbabwe</option>,\n];\n\nexport default countryList;\n","import React, { useState } from \"react\";\nimport {\n  Heading,\n  Container,\n  FormControl,\n  FormLabel,\n  Input,\n  Select,\n  Button,\n  Stack,\n  Box,\n  Tooltip,\n  Center,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  Text,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  CircularProgress,\n  Divider,\n  Stat,\n  StatLabel,\n  StatNumber,\n  useToast,\n  StatHelpText,\n} from \"@chakra-ui/react\";\n\nimport countryList from \"./country.js\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [details, setDetails] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    country: \"\",\n  });\n\n  const [modal, setModal] = useState(false);\n\n  const [result, setResult] = useState({});\n\n  const toast = useToast();\n\n  const inputEvents = (event) => {\n    setDetails((prev) => {\n      if (event.target.name === \"firstname\") {\n        return {\n          firstname: event.target.value,\n          lastname: prev.lastname,\n          country: prev.country,\n        };\n      } else if (event.target.name === \"lastname\") {\n        return {\n          firstname: prev.firstname,\n          lastname: event.target.value,\n          country: prev.country,\n        };\n      } else if (event.target.name === \"country\") {\n        return {\n          firstname: prev.firstname,\n          lastname: prev.lastname,\n          country: event.target.value,\n        };\n      }\n    });\n  };\n\n  const submitEvent = () => {\n    if (\n      details.country !== \"\" &&\n      details.firstname !== \"\" &&\n      details.last !== \"\"\n    ) {\n      const url = `https://v2.namsor.com/NamSorAPIv2/api2/json/diaspora/${details.country}/${details.firstname}/${details.lastname}`;\n      console.log(url);\n      axios\n        .get(url, {\n          headers: {\n            \"X-API-KEY\": \"1a6fcaf6a3536fb121746f5d6a8e53ed\",\n            \"Content-type\": \"application/json;charset=UTF-8\",\n          },\n        })\n        .then((response) => {\n          setResult(response.data);\n          toast({\n            title: \"Results Fetched\",\n            description: \"Check your result\",\n            status: \"success\",\n            position: \"top-right\",\n            duration: 5000,\n            isClosable: true,\n          });\n        })\n        .finally(() => {\n          setModal(true);\n        });\n    } else {\n      toast({\n        title: \"Incomplete Details\",\n        description: \"Please fill all the details\",\n        status: \"error\",\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Box w=\"100%\" p={8} h=\"100vh\">\n        <Container centerContent>\n          <Stack spacing={8}>\n            <Tooltip label=\"Find your Origin\" closeDelay={300}>\n              <Heading\n                fontSize=\"6xl\"\n                bgGradient=\"linear(to-r, teal.500,green.500)\"\n                bgClip=\"text\"\n              >\n                Ethnicity Finder\n              </Heading>\n            </Tooltip>\n            <FormControl id=\"firstname\" isRequired>\n              <FormLabel>First name</FormLabel>\n              <Input\n                placeholder=\"First name\"\n                focusBorderColor=\"green.500\"\n                name=\"firstname\"\n                onChange={inputEvents}\n              />\n            </FormControl>\n            <FormControl id=\"lastname\" isRequired>\n              <FormLabel>Last name</FormLabel>\n              <Input\n                placeholder=\"Last name\"\n                focusBorderColor=\"green.500\"\n                name=\"lastname\"\n                onChange={inputEvents}\n              />\n            </FormControl>\n            <FormControl id=\"country\" isRequired>\n              <FormLabel>Country</FormLabel>\n              <Select\n                placeholder=\"Select country\"\n                focusBorderColor=\"green.500\"\n                name=\"country\"\n                onChange={inputEvents}\n              >\n                {countryList}\n              </Select>\n            </FormControl>\n            <Button\n              onClick={submitEvent}\n              mt={4}\n              color=\"white\"\n              bgGradient=\"linear(to-r, teal.500,green.500)\"\n              type=\"submit\"\n              _hover={{\n                bgGradient: \"linear(to-r, teal.600,green.600)\",\n              }}\n            >\n              Submit\n            </Button>\n          </Stack>\n        </Container>\n      </Box>\n      <Modal\n        onClose={() => {\n          setModal(false);\n        }}\n        isOpen={modal}\n        isCentered\n        size={\"xl\"}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Result</ModalHeader>\n          <ModalCloseButton />\n          {result.ethnicitiesTop ? (\n            <ModalBody>\n              <Stack spacing={3}>\n                <Stat>\n                  <StatLabel>Accuracy</StatLabel>\n                  <StatNumber>\n                    {Math.round(result.score * 100) / 100}\n                    {\" %\"}\n                  </StatNumber>\n                  <StatHelpText>\n                    Predictions are not always accurate\n                  </StatHelpText>\n                </Stat>\n                <Divider />\n                <Stat>\n                  <StatLabel>Ethinicity</StatLabel>\n                  <StatNumber>{result.ethnicity}</StatNumber>\n                  <StatHelpText>\n                    Alternate Ethinicity: {result.ethnicityAlt}\n                  </StatHelpText>\n                </Stat>\n                <Divider />\n                <Stat>\n                  <StatLabel>Other Possible Ethinicities</StatLabel>\n                  <StatHelpText>\n                    {result.ethnicitiesTop.slice(2).map((e) => (\n                      <Text fontSize=\"xs\">{e}</Text>\n                    ))}\n                  </StatHelpText>\n                </Stat>\n              </Stack>\n            </ModalBody>\n          ) : (\n            <ModalBody>\n              <Center>\n                <CircularProgress isIndeterminate color=\"green.300\" />\n              </Center>\n            </ModalBody>\n          )}\n          <ModalFooter>\n            <Button\n              onClick={() => {\n                setModal(false);\n                setResult({});\n              }}\n            >\n              Close\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}